server:
  port: ${PORT:8090}
spring:
  application:
    # the name of the application represents the global identifier of this microservice.
    name: tracking-service
  cloud:
    config:
      uri: ${CONFIG_SERVER_URI:http://localhost:8888}
      # failFast is disabled per default, so that the service can start standalone without config server.
      # failFast should be enabled in production environments.
      # it can be set via an environment variable or the config server
      failFast: ${CONFIG_SERVER_FAILFAST:false}
    discovery:
      # by disabling the service discovery the application/service can be started in "standalone mode".
      # service discovery is disabled by default and should be enabled (set to true) for the "cloud mode".
      # it can be set via an environment variable or the config server
      enabled: ${discovery.enabled:${DISCOVERY_ENABLED:false}}
  epcis:
    url: http://${EPCIS_HOST:localhost}:${EPCIS_PORT:8119}
    # relative path befor the standard EPCIS Service Interface e.g. Poll
    # For example, in default, the following url will be called for a simple event query: http://localhost:8119/epcis/Service/Poll/SimpleEventQuery?MATCH_epc=xx 
    rest_api_path: ${EPCIS_API_PATH:epcis/Service}
logstash:
  uri: ${LOGSTASH_URI:localhost:5000}
  

---

spring:
  profiles: productive
